name: k6 Performance Testing
on:
  push:
    branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
#   schedule:
#     # Run performance tests daily at 2 AM UTC
#     - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_duration:
        description: 'Test duration (e.g., 30s, 5m)'
        required: false
        default: '30s'
      virtual_users:
        description: 'Number of virtual users'
        required: false
        default: '10'

jobs:
  performance-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup k6
        uses: grafana/setup-k6-action@v1

      - name: Run k6 local test
        uses: grafana/run-k6-action@v1
        with:
          path: src/performance/weather-api.k6.js
          flags: --summary-export=k6-results.json --out json=k6-raw-results.json
        env:
          WEATHERAPI_KEY: ${{ secrets.WEATHERAPI_KEY }}
          WEATHERAPI_BASEURL: https://api.weatherapi.com/v1
          K6_VUS: ${{ github.event.inputs.virtual_users || '10' }}
          K6_DURATION: ${{ github.event.inputs.test_duration || '30s' }}

      - name: Run k6 cloud test
        if: github.ref == 'refs/heads/main'
        run: k6 cloud src/performance/weather-api.k6.js
        env:
          K6_CLOUD_TOKEN: ${{ secrets.K6_CLOUD_TOKEN }}
          WEATHERAPI_KEY: ${{ secrets.WEATHERAPI_KEY }}
          WEATHERAPI_BASEURL: https://api.weatherapi.com/v1

      - name: Upload k6 results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-performance-results
          path: |
            k6-results.json
            k6-raw-results.json
          retention-days: 7

      - name: Generate enhanced HTML report
        if: always()
        run: |
          if [ -f k6-results.json ] || [ -f k6-raw-results.json ]; then
            npm run k6:report
            echo "✅ Enhanced HTML report generated: k6-performance-report.html"
          else
            echo "❌ No k6 result files found to generate report"
          fi

      - name: Upload performance report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: k6-performance-report
          path: k6-performance-report.html
          retention-days: 30

      - name: Generate performance summary
        if: always()
        run: |
          echo "## 🚀 k6 Performance Test Results" >> $GITHUB_STEP_SUMMARY
          echo "### Test Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Virtual Users**: ${{ github.event.inputs.virtual_users || '10' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Duration**: ${{ github.event.inputs.test_duration || '30s' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test File**: src/performance/weather-api.k6.js" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f k6-results.json ]; then
            echo "### ✅ Test Results" >> $GITHUB_STEP_SUMMARY
            echo "Performance test completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "📊 **Enhanced HTML Report**: Available in artifacts as 'k6-performance-report'" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Quick Metrics Preview" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            head -20 k6-results.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Test Failed" >> $GITHUB_STEP_SUMMARY
            echo "Performance test failed or no results generated" >> $GITHUB_STEP_SUMMARY
          fi
